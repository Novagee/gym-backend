<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.domain.User">

  <resultMap id="BaseResultMap" type="com.jy.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="device_token" jdbcType="VARCHAR" property="deviceToken" />
    <result column="device_type" jdbcType="VARCHAR" property="deviceType" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="interestIn" jdbcType="CHAR" property="interestIn" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="lastlogintime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="pic_width" jdbcType="INTEGER" property="picWidth" />
    <result column="pic_height" jdbcType="INTEGER" property="picHeight" />
    <result column="age_id" jdbcType="INTEGER" property="ageId" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="receive_profile" jdbcType="VARCHAR" property="receiveProfile" />
    <result column="tagline" jdbcType="VARCHAR" property="tagline" />
  </resultMap>
  
  <resultMap id="FullResultMap" type="com.jy.domain.rest.UserVO" extends="BaseResultMap">
    <result column="lat" property="lat" jdbcType="DOUBLE" />
    <result column="lng" property="lng" jdbcType="DOUBLE" />
  </resultMap>
  
  <sql id="Base_Column_List">
    u.id as id, name, device_token, device_type, gender, interestIn, likes, u.enabled, lastlogintime, createtime, pic, pic_width, pic_height, age_id, 
    uuid, city_id, receive_profile, tagline
  </sql>
  
  <sql id="Join_Column_Location">
  	lat, lng, updatetime
  </sql>
  
  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user u
    where u.id = #{id,jdbcType=BIGINT}
  </select>
 
  
  <select id="getByUUID" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user u
    where uuid = #{uuid,jdbcType=BIGINT}
  </select>
  
  <select id="getDetailById" resultMap="FullResultMap">
	select 
		<include refid="Base_Column_List" />,<include refid="Join_Column_Location" />
	from user u 
	left outer join user_location ul
	on u.id = ul.user_id
	where u.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getUser" resultMap="FullResultMap">
	select 
		<include refid="Base_Column_List" />,<include refid="Join_Column_Location" />, 
	case 
		when u.id = um.user_id then 1
     	else 0
    end as isMock  
	from user u 
	left outer join user_location ul on u.id = ul.user_id
	left outer join user_mock um on u.id = um.user_id
	where u.enabled = 1 and u.id <![CDATA[<>]]> #{userId,jdbcType=BIGINT} and lastlogintime <![CDATA[<]]> #{timestamp,jdbcType=VARCHAR}
		<if test="interestIn != null">
			and gender = #{interestIn,jdbcType=VARCHAR}
		</if>
	order by 
		u.likes desc,u.lastlogintime desc
	limit #{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="getTodaysUsers" resultMap="FullResultMap">
	select 
		<include refid="Base_Column_List" />,<include refid="Join_Column_Location" />
	from user u 
	left outer join user_location ul
	on u.id = ul.user_id
	where DATE(u.createtime) = CURDATE()
	order by 
	u.createtime desc
  </select>
  
  <select id="getAllUser" resultMap="FullResultMap">
	select 
		<include refid="Base_Column_List" />,<include refid="Join_Column_Location" />
	from user u 
	left outer join user_location ul
	on u.id = ul.user_id
	where 1 = 1
	<if test="userId != null and userId != ''">
		and u.id like #{userId,jdbcType=VARCHAR}
	</if>
	<if test="name != null and name != ''">
		and u.name like #{name,jdbcType=VARCHAR}
	</if>
	<if test="deviceType != null and deviceType != ''">
		and u.device_type like #{deviceType,jdbcType=VARCHAR}
	</if>
	<if test="gender != null and gender != ''">
		and u.gender like #{gender,jdbcType=VARCHAR}
	</if>
	order by 
	u.likes desc, u.lastlogintime desc
	limit #{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="getAllUserCount" resultType="java.lang.Integer">
	select 
		count(u.id)
	from user u 
	left outer join user_location ul
	on u.id = ul.user_id
	where 1 = 1
	<if test="userId != null and userId != ''">
		and u.id like #{userId,jdbcType=VARCHAR}
	</if>
	<if test="name != null and name != ''">
		and u.name like #{name,jdbcType=VARCHAR}
	</if>
	<if test="deviceType != null and deviceType != ''">
		and u.device_type like #{deviceType,jdbcType=VARCHAR}
	</if>
	<if test="gender != null and gender != ''">
		and u.gender like #{gender,jdbcType=VARCHAR}
	</if>
  </select>
  
  <delete id="delete" parameterType="com.jy.domain.User">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="create" parameterType="com.jy.domain.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, name, device_token, device_type, gender, interestIn, 
      likes, enabled, lastlogintime, 
      createtime, pic, pic_width, pic_height, age_id, 
      uuid, city_id, receive_profile, tagline)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{deviceToken,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},  #{interestIn,jdbcType=CHAR}, 
      #{likes,jdbcType=INTEGER}, #{enabled,jdbcType=BIT}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{pic,jdbcType=VARCHAR}, #{picWidth,jdbcType=INTEGER}, #{picHeight,jdbcType=INTEGER}, #{ageId,jdbcType=INTEGER}, 
      #{uuid,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, #{receiveProfile,jdbcType=BIT}, #{tagline,jdbcType=VARCHAR})
  </insert>
  
  <update id="update" parameterType="com.jy.domain.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deviceToken != null">
        device_token = #{deviceToken,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="interestIn != null">
        interestIn = #{interestIn,jdbcType=CHAR},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="lastlogintime != null">
        lastlogintime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="picWidth != null">
        pic_width = #{picWidth,jdbcType=INTEGER},
      </if>
      <if test="picHeight != null">
        pic_height = #{picHeight,jdbcType=INTEGER},
      </if>
      <if test="ageId != null">
        age_id = #{ageId,jdbcType=INTEGER},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="receiveProfile != null">
        receive_profile = #{receiveProfile,jdbcType=BIT},
      </if>
      <if test="tagline != null">
        tagline = #{tagline,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>